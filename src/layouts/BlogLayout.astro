---
import BaseHead from "@components/BaseHead.astro";
import BlogTag from "@components/blog/BlogTag.astro";
import Comments from "@components/blog/Comments.astro";
import TableOfContent from "@components/blog/TableOfContent.astro";
import CustomPageTitle from "@components/CustomPageTitle.astro";
import Footer from "@components/Footer.astro";
import FormattedDate from "@components/FormattedDate.astro";
import Navbar from "@components/Navbar.astro";
import JsonLd from "@components/JsonLd.astro";
import TocDrawer from "@components/blog/TocDrawer";
import "@fontsource-variable/inter";
import type { CollectionEntry } from "astro:content";
import "@/styles/global.css";

// Props type
interface Heading {
  depth: number;
  slug: string;
  text: string;
}

type Props = CollectionEntry<"blog">["data"] & {
  headings: Heading[];
  slug: string;
};

const {
  title,
  description,
  pubDate,
  updatedDate,
  tags,
  headings,
  duration,
  heroImage,
  slug
} = Astro.props;

const canonicalURL = new URL(`/blog/${slug}`, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead 
      title={`${title} | Mohamad Rafi Irfansyah's Blog`}
      description={description}
      image={heroImage}
      canonicalURL={canonicalURL}
    />
    <JsonLd />
  </head>
  <body class="bg-neutral-900 min-h-screen font-inter text-white">
    <Navbar />
    <main class="mx-auto px-5 lg:px-20 py-24">
      <article class="relative">
        <img
          src="/assets/radial_pattern_bg.svg"
          alt="Radial Background"
          class="absolute top-0 left-0 opacity-30 z-[-1]"
        />
        <CustomPageTitle 
          title={title} 
          className="title-section text-3xl md:text-6xl mb-8" 
        />
        <section class="flex flex-col space-y-8 md:space-y-16">
          <p class="text-[#F6F6F6] font-light text-sm md:text-lg pr-7">
            {description}
          </p>
          <div class="flex flex-wrap items-center text-xs md:text-sm">
            <div class="pr-7 border-r border-white/50">
              <FormattedDate date={pubDate} />
            </div>
            <span class="px-7 text-[#F6F6F6] font-light">
              {duration}
            </span>
            {updatedDate && (
              <div class="ml-4 text-white/70">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )}
          </div>
        </section>
        <section class="mt-8 border border-[#272727] rounded-md p-4 lg:max-w-[840px] 2xl:max-w-5xl">
          <p class="text-white font-light text-base">Topics</p>
          <div class="flex flex-wrap gap-3 mt-3">
            {tags.map((tag) => (
              <BlogTag tags={tag} />
            ))}
          </div>
        </section>
        <div class="flex flex-col lg:flex-row">
          <div class="blog-body w-full xl:w-3/4 pt-10">
            <slot />
          </div>
          {headings.length > 0 && (
            <aside class="hidden xl:flex flex-col items-start pl-8 -mt-[106px] w-1/4">
              <TableOfContent headings={headings} />
            </aside>
          )}
        </div>
        {headings.length > 0 && (
          <div class="fixed bottom-8 right-4 xl:hidden">
            <TocDrawer headings={headings} client:only="react" />
          </div>
        )}
        <div class="flex justify-center px-5 lg:px-20 py-10 border-t border-[#272727] mt-20">
          <Comments />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  html {
    font-family: "Inter Variable", sans-serif;
    scroll-behavior: smooth;
  }

  pre {
    padding: 16px;
    background-color: #1e1e1e;
    border-radius: 8px;
    overflow-x: auto;
    margin-block: 16px;
  }

  .blog-body {
    color: #83868a;
    text-align: justify;
  }

  h1 {
    font-size: 3.052em;
  }

  h2 {
    font-size: 2.441em;
  }

  h3 {
    font-size: 1.953em;
  }

  h4 {
    font-size: 1.563em;
  }

  h5 {
    font-size: 1.25em;
  }

  h6 {
    font-size: 1em;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: 600;
    color: #ffffff;
    position: relative;
  }

  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background-color: #666;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background-color: #444;
  }

  html {
    scrollbar-width: thin;
    scrollbar-color: #666 transparent;
  }
</style>

<script>
  import { animate, spring } from "motion";

  const titleSections = document.querySelectorAll(".title-section");
  titleSections.forEach((element) => {
    animate(
      element,
      {
        opacity: [0, 1],
        transform: ["translateX(-50px)", "translateX(0px)"]
      },
      {
        type: spring,
        bounce: 0.7,
        duration: 1.5
      }
    );
  });
</script>